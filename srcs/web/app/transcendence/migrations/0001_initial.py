# Generated by Django 5.0.1 on 2024-02-07 01:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='friend_request',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='Waiting', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Stat_Game',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nb_played', models.IntegerField(default=0)),
                ('time_played', models.IntegerField(default=0)),
                ('nb_party', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('image', models.CharField(default='/var/www/static/default_game.webp', max_length=128)),
                migrations.CreateModel(
                    name='Game',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=50)),
                        ('image', models.CharField(default='/var/www/default_game.webp', max_length=255)),
                        ('description', models.CharField(max_length=1024)),
                        ('genre', models.CharField(max_length=50, null=True)),
                    ],
                ),
                migrations.CreateModel(
                    name='Party',
                    fields=[
                        ('id', models.AutoField(primary_key=True, serialize=False)),
                        ('name', models.CharField(max_length=30, default='Party')),
                        ('is_full', models.BooleanField(default=False)),
                        ('started_at', models.DateTimeField(auto_now_add=True)),
                        ('ended_at', models.DateTimeField(auto_now=True)),
                        ('status', models.CharField(max_length=30, default='Waiting')),
                        ('id_game', models.ForeignKey(to='transcendence.game', on_delete=django.db.models.deletion.CASCADE)),
                        ('id_loser', models.ForeignKey(to='transcendence.user', related_name='loser', on_delete=django.db.models.deletion.CASCADE)),
                        ('id_winner', models.ForeignKey(to='transcendence.user', related_name='winner', on_delete=django.db.models.deletion.CASCADE)),
                        ('player1', models.ForeignKey(to='transcendence.user', related_name='player1', on_delete=django.db.models.deletion.CASCADE)),
                        ('player2', models.ForeignKey(to='transcendence.user', related_name='player2', on_delete=django.db.models.deletion.CASCADE)),
                    ],
                ),
                migrations.CreateModel(
                    name='Stat_Game',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('name', models.CharField(max_length=50)),
                        ('is_full', models.BooleanField(default=False)),
                        ('time_start', models.DateTimeField()),
                        ('time_end', models.DateTimeField()),
                        ('status', models.CharField(max_length=50, default='waiting')),
                        ('score', models.IntegerField()),
                        ('id_game', models.ForeignKey(to='transcendence.game', on_delete=django.db.models.deletion.CASCADE)),
                        ('id_looser', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='looser', on_delete=django.db.models.deletion.CASCADE)),
                        ('id_user1', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='user1', on_delete=django.db.models.deletion.CASCADE)),
                        ('id_user2', models.ForeignKey(to=settings.AUTH_USER_MODEL, related_name='user2', on_delete=django.db.models.deletion.CASCADE)),
                    ],
                ),
                ('id_winner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='winner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StatsGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nb_player', models.IntegerField()),
                ('time_played', models.IntegerField()),
                ('nb_party', models.IntegerField()),
                ('id_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transcendence.game')),
            ],
        ),
        migrations.CreateModel(
            name='StatsUserByGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_played', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('looses', models.IntegerField(default=0)),
                ('nb_played', models.IntegerField(default=0)),
                ('id_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transcendence.game')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
